version: '3.8'

services:
  randomchat-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: randomchat-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    env_file:
      - .env
    volumes:
      - ./server/admin.db:/app/admin.db
      - ./logs:/app/logs
    networks:
      - randomchat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  randomchat-client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: randomchat-client
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - randomchat-server
    networks:
      - randomchat-network
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

  nginx-proxy:
    image: nginx:alpine
    container_name: randomchat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./client/build:/var/www/html:ro
    depends_on:
      - randomchat-server
    networks:
      - randomchat-network

  # Optional: Redis for session storage and caching
  redis:
    image: redis:alpine
    container_name: randomchat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - randomchat-network
    command: redis-server --appendonly yes

  # Optional: Monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: randomchat-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - randomchat-network

  grafana:
    image: grafana/grafana:latest
    container_name: randomchat-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - randomchat-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  randomchat-network:
    driver: bridge 